export class UserDefaultPermissions {
    empPermissions = new Array("selfService:support:view",
        "user:password:edit",
        "user:generalinfo:view",
        "shiftBidding:manage",
        "schedule:my:generate",
        "schedule:my:view",
        "myTimeOffRequests:manage",
        "interactionPlayer:view",
        "formexecutor:view",
        "coaching:receive",
        "myevaluations:view")

    evalPermissions = new Array("selfService:support:view",
        "user:password:edit",
        "user:generalinfo:view",
        "schedule:my:generate",
        "schedule:my:view",
        "interactionPlayer:view",
        "evaluation:evaluate",
        "evaluation:assign",
        "formexecutor:view",
        "coaching:receive",
        "mytasks:view",
        "myevaluations:view",
        "search:share",
        "search:play",
        "search:search",
        "recording:configuration:view",
        "recording:configuration:edit",
        "player:view",
        "player:play",
        "player:share",
        "player:save",
        "evaluation:evaluationforms:view")

    evalWithNoFormViewPermission  = new Array(
        "selfService:support:view",
        "user:password:edit",
        "user:generalinfo:view",
        "schedule:my:generate",
        "schedule:my:view",
        "interactionPlayer:view",
        "evaluation:evaluate",
        "evaluation:assign",
        "formexecutor:view",
        "coaching:receive",
        "mytasks:view",
        "myevaluations:view",
        "search:share",
        "search:play",
        "search:search",
        "recording:configuration:view",
        "recording:configuration:edit",
        "player:view",
        "player:play",
        "player:share",
        "player:save")

    mgrPermissions = new Array(
        "businessdataconfiguration:view",
        "businessdataconfiguration:edit",
        "roleManagement:view",
        "roleManagement:search",
        "roleManagement:create",
        "roleManagement:edit",
        "roleManagement:deactivate",
        "ExternalBusinessUnit:view",
        "ExternalBusinessUnit:edit",
        "user:clientgeneralinfo:view",
        "skill:my:view",
        "skill:view",
        "skill:edit",
        "skill:add",
        "skill:delete",
        "passwordPolicyManagement:view",
        "passwordPolicyManagement:edit",
        "user:view",
        "user:edit",
        "user:register",
        "user:delete",
        "user:invite",
        "user:import",
        "selfService:support:view",
        "user:password:edit",
        "user:generalinfo:view",
        "dailyrule:edit",
        "dailyrule:delete",
        "dailyrule:manage",
        "activitycodecategory:view",
        "activitycode:view",
        "activitycode:edit",
        "activitycode:add",
        "activitycode:delete",
        "analyticsCategoryManager:create",
        "analyticsCategoryManager:delete",
        "analyticsCategoryManager:update",
        "analyticsCategoryManager:view",
        "weeklyrule:edit",
        "weeklyrule:delete",
        "weeklyrule:manage",
        "acdActivitiesMapping:manage",
        "historicalData:manage",
        "historicalData:delete",
        "forecast:import",
        "broadcaster:manage",
        "schedule:manager:view",
        "schedule:manager:edit",
        "schedule:manager:delete",
        "realTimeAdherence:manage",
        "realTimeAdherence:view",
        "timeOffRequests:manage",
        "schedulingunit:view",
        "schedulingunit:edit",
        "schedulingunit:add",
        "schedulingunit:delete",
        "intraday:view",
        "biddingManager:edit",
        "shiftBiddingTemplates:manage",
        "shiftBiddingTemplates:delete",
        "shiftBidding:manage",
        "schedulingunit:my:view",
        "schedule:my:generate",
        "schedule:my:view",
        "myTimeOffRequests:manage",
        "user:availability:view",
        "schedule:manage",
        "schedule:delete",
        "schedule:edit",
        "schedule:view",
        "coaching:coachingpackage:view",
        "coaching:coachingpackage:edit",
        "coaching:coachingpackage:add",
        "coaching:coachingpackage:delete",
        "coaching:coachingplans:view",
        "coaching:coachingplans:edit",
        "coaching:coachingplans:add",
        "coaching:coachingplans:delete",
        "interactionPlayer:view",
        "performancemonitoring:view",
        "qualityPlanner:view",
        "qualityPlanner:edit",
        "qualityPlanner:add",
        "qualityPlanner:delete",
        "calibration:view",
        "calibration:add",
        "calibration:delete",
        "plansmonitoring:view",
        "evaluation:evaluationforms:view",
        "evaluation:evaluationforms:edit",
        "evaluation:evaluationforms:add",
        "evaluation:evaluationforms:delete",
        "evaluation:evaluate",
        "evaluation:assign",
        "formexecutor:view",
        "coaching:receive",
        "dashboard:view",
        "dashboard:edit",
        "dashboard:help",
        "manageForms:view",
        "mytasks:view",
        "myevaluations:view",
        "dashboard:my:view",
        "dashboard:my:edit",
        "selfassessment:view",
        "selfassessment:initiate",
        "selfassessment:delete",
        "search:share",
        "search:play",
        "search:search",
        "recording:configuration:view",
        "recording:configuration:edit",
        "player:view",
        "player:play",
        "player:share",
        "player:save",
        "qmSupervisorDashboard:view",
        "groups:view",
        "groups:create",
        "groups:delete",
        "groups:edit"
    )

    async getUserDefaultApplications(role: string) {
        switch (role.toLowerCase()) {
            case "employee":
                return this.empPermissions;
            case "evaluator":
                return this.evalPermissions;
            case "evaluator2":
                return this.evalWithNoFormViewPermission;
            case "manager":
                return this.mgrPermissions;
            default:
                return [];
        }
    };
}

// module.exports = {
//     getUserDefaultApplications: getUserDefaultApplications
// };

